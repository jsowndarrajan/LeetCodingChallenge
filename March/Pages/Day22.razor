@page "/day22"
@using March.Problems
@using global::Shared.Helpers
@using Newtonsoft.Json

<h4 class="mb-3">
    <a href="@_problem.Url" target="_blank" class="ml-md-auto">@_problem.Title</a>
</h4>

<div class="mb-3">
    <label for="wordList" class="form-label">Word List</label>
    <input type="text" @bind="WordList" class="form-control" id="wordList" placeholder='["KiTe","kite","hare","Hare"]'>
</div>
<div class="mb-3">
    <label for="queries" class="form-label">Queries</label>
    <input type="text" @bind="Queries" class="form-control" id="queries" placeholder='["kite","Kite","KiTe","Hare","HARE","Hear","hear","keti","keet","keto"]'>
</div>
<div class="mb-3">
    <label class="form-label">Constraints</label>
    <ul>
        <li><code>1 &lt;= WordList.length &lt;= 5000</code></li>
        <li><code>1 &lt;= Queries.length &lt;= 5000</code></li>
        <li><code>1 &lt;= WordList[i].length &lt;= 7</code></li>
        <li><code>1 &lt;= Queries[i].length &lt;= 7</code></li>
        <li>All strings in <code>WordList</code> and <code>queries</code> consist only of <strong>english</strong>&nbsp;letters.</li>
    </ul>
</div>
<div class="mb-3">
    <label class="form-label">Output: <code>@Output</code></label>
</div>

<div class="mb-3">
    <button class="btn btn-primary mb-3" @onclick="Run">Run</button>
</div>

@code {
    private string WordList { get; set; }
    private string Queries { get; set; }
    private string Output { get; set; }

    readonly VowelSpellchecker _problem = new VowelSpellchecker();

    private void Run()
    {
        try
        {
            var wordList = DataConverter.ConvertStringToStringArray(WordList);
            var queries = DataConverter.ConvertStringToStringArray(Queries);
            var result = _problem.Spellchecker(wordList, queries);
            Output = JsonConvert.SerializeObject(result);
        }
        catch (Exception ex)
        {
            Output = ex.Message;
        }
    }
}